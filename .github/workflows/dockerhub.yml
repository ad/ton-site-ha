name: Dockerhub Image CI

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - id: set_var
        run: |
          content=`cat ./config.json`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          echo "::set-output name=packageJson::$content"
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=${{ secrets.DOCKER_USER }}/ton-site-ha
          SHORTREF=${GITHUB_SHA::8}
          echo '${{fromJson(steps.set_var.outputs.packageJson).version}}'
          BUILD_VERSION=${{fromJson(steps.set_var.outputs.packageJson).version}}
          echo "BUILD_VERSION=${BUILD_VERSION}" >> $GITHUB_ENV
          TAGS="${DOCKER_IMAGE}:${BUILD_VERSION},${DOCKER_IMAGE}:${SHORTREF},${DOCKER_IMAGE}:latest"

          # Set output parameters.
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo "BUILD_TIMESTAMP=$(date +%Y-%m-%dT%H:%M:%S)" >> $GITHUB_ENV
          echo "TAGS=$(date +%Y-%m-%dT%H:%M:%S)" >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-
      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64, linux/arm/v7, linux/arm64
          # platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          build-args: |
            BUILD_VERSION=${{ env.BUILD_VERSION }}
            BUILD_TIMESTAMP=${{ env.BUILD_TIMESTAMP }}
